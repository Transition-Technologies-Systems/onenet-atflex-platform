spring:
  application:
    name: flex-registry
  devtools:
    restart:
      enabled: false
      additional-exclude: static/**
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jmx:
    enabled: false
  main:
    allow-bean-definition-overriding: true
  mvc:
    favicon:
      enabled: false
  security:
    user:
      name: admin
      password: admin
      roles: USER, ADMIN
  task:
    execution:
      thread-name-prefix: jhipster-registry-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: jhipster-registry-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML
    cache: false
  output:
    ansi:
      console-available: true
  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
  sleuth:
    sampler:
      probability: 1 # report 100% of traces
  zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
    base-url: http://localhost:9411
    enabled: false
    locator:
      discovery:
        enabled: true

logging:
  file:
    name: target/flex-registry.log

ribbon:
  eureka:
    enabled: true

# See http://cloud.spring.io/spring-cloud-netflix/spring-cloud-netflix.html
zuul: # those values must be configured depending on the application specific needs
  sensitive-headers: Cookie,Set-Cookie #see https://github.com/spring-cloud/spring-cloud-netflix/issues/3126
  host:
    max-total-connections: 1000
    max-per-route-connections: 100
  prefix: /services/ #slash before and after
  strip-prefix: true
  semaphore:
    max-semaphores: 500

management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include: ['configprops', 'env', 'health', 'info', 'jhimetrics', 'logfile', 'loggers', 'threaddump']
  endpoint:
    health:
      show-details: when-authorized
      roles: 'ROLE_ADMIN'
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  metrics:
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        request:
          autotime:
            enabled: true

server:
  port: 8761
  servlet:
    session:
      cookie:
        http-only: true
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css, application/javascript, application/json
    min-response-size: 1024

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

# https://github.com/Netflix/eureka/blob/master/eureka-core/src/main/java/com/netflix/eureka/EurekaServerConfig.java
eureka:
  instance:
    appname: flex-registry
    instanceId: flexRegistry:${spring.application.instance-id:${random.value}}
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    status-page-url-path: ${management.endpoints.web.base-path}/info
    health-check-url-path: ${management.endpoints.web.base-path}/health
    metadata-map:
      zone: primary # This is needed for the load balancer
      profile: ${spring.profiles.active}
      version: #project.version#
      git-version: ${git.commit.id.describe:}
      git-commit: ${git.commit.id.abbrev:}
      git-branch: ${git.branch:}
  client:
    enabled: true
    healthcheck:
      enabled: true
    fetch-registry: false
    register-with-eureka: false
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 10
    service-url:
      defaultZone: http://admin:${spring.security.user.password:admin}@localhost:${server.port}/eureka/
  server:
    # see discussion about enable-self-preservation:
    # https://github.com/jhipster/generator-jhipster/issues/3654
    enable-self-preservation: false
    peer-node-read-timeout-ms: 1000
  dashboard:
    path: /registry
  datacenter: FlexRegistry-DataCenter
  environment: FlexRegistry-Environment

# https://www.jhipster.tech/common-application-properties/
jhipster:
  clientApp:
    name: 'FlexRegistry'
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        base64-secret: Y2M4MWQ3NzUwM2YxZmMyYjE5NDNlNTdkZmZhMjNkNDBlMWJhMzkzOTNkMjQ3MjVjNzk2NTMwZWE0MmY5MDU0OWRmZjc1ODYwODZjOTRlMWZlMmIzNWE5OWQ3YzVjYzExMjg0N2M2NWFkNzU3NDIzMGU3ZDI0YzY0N1234567890=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
  swagger:
    default-include-pattern: /api/.*
    title: Flexibility Platform - Registry API
    description: Flexibility Platform - Registry API documentation
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license:
    license-url:
  metrics:
    logs: # Reports metrics in the logs
      enabled: false
      report-frequency: 60 # in seconds
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
